package ggTCalculator;


/**
* ggTCalculator/_CoordinatorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ggTCalculator.idl
* Donnerstag, 2. Juni 2011 20:35 Uhr UTC
*/

public class _CoordinatorStub extends org.omg.CORBA.portable.ObjectImpl implements ggTCalculator.Coordinator
{

  public void addStarter (String startername, ggTCalculator.Starter starter)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addStarter", true);
                $out.write_string (startername);
                ggTCalculator.StarterHelper.write ($out, starter);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addStarter (startername, starter        );
            } finally {
                _releaseReply ($in);
            }
  } // addStarter

  public void addProcess (String startername, int id, ggTCalculator.Process process)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addProcess", true);
                $out.write_string (startername);
                $out.write_long (id);
                ggTCalculator.ProcessHelper.write ($out, process);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addProcess (startername, id, process        );
            } finally {
                _releaseReply ($in);
            }
  } // addProcess

  public String[] getStarterList ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getStarterList", true);
                $in = _invoke ($out);
                String $result[] = ggTCalculator.StarterListeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getStarterList (        );
            } finally {
                _releaseReply ($in);
            }
  } // getStarterList

  public void calculate (int timeout, int mindelay, int maxdelay, int minprocess, int maxprocess, int ggT, ggTCalculator.Log log) throws ggTCalculator.CoordinatorPackage.noStarter, ggTCalculator.CoordinatorPackage.alreadyRunning
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("calculate", true);
                $out.write_long (timeout);
                $out.write_long (mindelay);
                $out.write_long (maxdelay);
                $out.write_long (minprocess);
                $out.write_long (maxprocess);
                $out.write_long (ggT);
                ggTCalculator.LogHelper.write ($out, log);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ggTCalculator/Coordinator/noStarter:1.0"))
                    throw ggTCalculator.CoordinatorPackage.noStarterHelper.read ($in);
                else if (_id.equals ("IDL:ggTCalculator/Coordinator/alreadyRunning:1.0"))
                    throw ggTCalculator.CoordinatorPackage.alreadyRunningHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                calculate (timeout, mindelay, maxdelay, minprocess, maxprocess, ggT, log        );
            } finally {
                _releaseReply ($in);
            }
  } // calculate

  public void finished (int r)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("finished", true);
                $out.write_long (r);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                finished (r        );
            } finally {
                _releaseReply ($in);
            }
  } // finished

  public boolean terminationStart ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("terminationStart", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return terminationStart (        );
            } finally {
                _releaseReply ($in);
            }
  } // terminationStart

  public boolean terminationStop ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("terminationStop", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return terminationStop (        );
            } finally {
                _releaseReply ($in);
            }
  } // terminationStop

  public void quit ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("quit", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                quit (        );
            } finally {
                _releaseReply ($in);
            }
  } // quit

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ggTCalculator/Coordinator:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CoordinatorStub
