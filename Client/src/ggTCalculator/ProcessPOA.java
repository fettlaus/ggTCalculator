package ggTCalculator;


/**
* ggTCalculator/ProcessPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from vsp2.idl
* Donnerstag, 2. Juni 2011 14:27 Uhr UTC
*/

public abstract class ProcessPOA extends org.omg.PortableServer.Servant
 implements ggTCalculator.ProcessOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_left", new java.lang.Integer (0));
    _methods.put ("_set_left", new java.lang.Integer (1));
    _methods.put ("_get_right", new java.lang.Integer (2));
    _methods.put ("_set_right", new java.lang.Integer (3));
    _methods.put ("_get_id", new java.lang.Integer (4));
    _methods.put ("_set_id", new java.lang.Integer (5));
    _methods.put ("_get_number", new java.lang.Integer (6));
    _methods.put ("_set_number", new java.lang.Integer (7));
    _methods.put ("_get_log", new java.lang.Integer (8));
    _methods.put ("_set_log", new java.lang.Integer (9));
    _methods.put ("_get_delay", new java.lang.Integer (10));
    _methods.put ("_set_delay", new java.lang.Integer (11));
    _methods.put ("_get_timeout", new java.lang.Integer (12));
    _methods.put ("_set_timeout", new java.lang.Integer (13));
    _methods.put ("_get_ready", new java.lang.Integer (14));
    _methods.put ("_set_ready", new java.lang.Integer (15));
    _methods.put ("terminate", new java.lang.Integer (16));
    _methods.put ("message", new java.lang.Integer (17));
    _methods.put ("stop", new java.lang.Integer (18));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // ggTCalculator/Process/_get_left
       {
         ggTCalculator.Process $result = null;
         $result = this.left ();
         out = $rh.createReply();
         ggTCalculator.ProcessHelper.write (out, $result);
         break;
       }

       case 1:  // ggTCalculator/Process/_set_left
       {
         ggTCalculator.Process newLeft = ggTCalculator.ProcessHelper.read (in);
         this.left (newLeft);
         out = $rh.createReply();
         break;
       }

       case 2:  // ggTCalculator/Process/_get_right
       {
         ggTCalculator.Process $result = null;
         $result = this.right ();
         out = $rh.createReply();
         ggTCalculator.ProcessHelper.write (out, $result);
         break;
       }

       case 3:  // ggTCalculator/Process/_set_right
       {
         ggTCalculator.Process newRight = ggTCalculator.ProcessHelper.read (in);
         this.right (newRight);
         out = $rh.createReply();
         break;
       }

       case 4:  // ggTCalculator/Process/_get_id
       {
         int $result = (int)0;
         $result = this.id ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 5:  // ggTCalculator/Process/_set_id
       {
         int newId = in.read_long ();
         this.id (newId);
         out = $rh.createReply();
         break;
       }

       case 6:  // ggTCalculator/Process/_get_number
       {
         int $result = (int)0;
         $result = this.number ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 7:  // ggTCalculator/Process/_set_number
       {
         int newNumber = in.read_long ();
         this.number (newNumber);
         out = $rh.createReply();
         break;
       }

       case 8:  // ggTCalculator/Process/_get_log
       {
         ggTCalculator.Log $result = null;
         $result = this.log ();
         out = $rh.createReply();
         ggTCalculator.LogHelper.write (out, $result);
         break;
       }

       case 9:  // ggTCalculator/Process/_set_log
       {
         ggTCalculator.Log newLog = ggTCalculator.LogHelper.read (in);
         this.log (newLog);
         out = $rh.createReply();
         break;
       }

       case 10:  // ggTCalculator/Process/_get_delay
       {
         double $result = (double)0;
         $result = this.delay ();
         out = $rh.createReply();
         out.write_double ($result);
         break;
       }

       case 11:  // ggTCalculator/Process/_set_delay
       {
         double newDelay = in.read_double ();
         this.delay (newDelay);
         out = $rh.createReply();
         break;
       }

       case 12:  // ggTCalculator/Process/_get_timeout
       {
         int $result = (int)0;
         $result = this.timeout ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 13:  // ggTCalculator/Process/_set_timeout
       {
         int newTimeout = in.read_long ();
         this.timeout (newTimeout);
         out = $rh.createReply();
         break;
       }

       case 14:  // ggTCalculator/Process/_get_ready
       {
         boolean $result = false;
         $result = this.ready ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 15:  // ggTCalculator/Process/_set_ready
       {
         boolean newReady = in.read_boolean ();
         this.ready (newReady);
         out = $rh.createReply();
         break;
       }

       case 16:  // ggTCalculator/Process/terminate
       {
         boolean $result = false;
         $result = this.terminate ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 17:  // ggTCalculator/Process/message
       {
         int number = in.read_long ();
         this.message (number);
         out = $rh.createReply();
         break;
       }

       case 18:  // ggTCalculator/Process/stop
       {
         this.stop ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ggTCalculator/Process:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Process _this() 
  {
    return ProcessHelper.narrow(
    super._this_object());
  }

  public Process _this(org.omg.CORBA.ORB orb) 
  {
    return ProcessHelper.narrow(
    super._this_object(orb));
  }


} // class ProcessPOA
